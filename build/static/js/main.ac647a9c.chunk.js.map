{"version":3,"sources":["Context/CartContext.js","Components/Navbar.js","Components/Cart.js","Context/ProductContext.js","Components/products/ProductList.js","Components/Shop.js","Components/products/ProductDetails.js","Components/Checkout.js","Context/UserContext.js","Components/Login.js","Components/Utils/ProtectedRoute.js","Components/Dashboard.js","Components/Register.js","App.js","serviceWorker.js","index.js"],"names":["CartContext","React","createContext","displayName","CartProvider","props","state","cartItems","itemsCount","addToCart","bind","removeFromCart","deleteFromCart","registerItems","deleteAllOnSuccessfullPurchase","JSON","parse","localStorage","getItem","reduce","acc","item","count","this","setState","console","log","validatedCartName","validatedCartData","setItem","stringify","product","alreadyInCart","forEach","id","getItemsCount","push","cartIndex","splice","removeItem","cartState","setValidatedCart","getValidatedCart","Provider","value","children","Component","CartConsumer","Consumer","withRouter","token","className","to","activeClassName","location","pathname","Cart","errors","validatedCart","handleSubmit","context","e","preventDefault","formGroups","document","querySelectorAll","formGroup","i","find","registeredItem","itemId","itemCount","currentItem","name","length","history","map","error","errorIndex","key","onSubmit","sizesArr","availableSizes","size","type","title","disabled","index","onClick","handleRemoveFromCart","handleAddToCart","Intl","NumberFormat","style","currency","format","price","toFixed","handleDeleteFromCart","contextType","ProductContext","ProductProvider","products","getProductList","getSingleProduct","fetch","then","res","json","data","productState","ProductConsumer","ProductList","src","images","url","alt","toLowerCase","role","aria-label","Shop","ProductDetails","match","params","imageUrl","imageAlt","sizes","description","Checkout","montant","sum","itemPrice","itemTitle","selectedSize","toLocaleString","client","sandbox","production","env","total","onError","err","onSuccess","payment","method","body","paymentStatus","paid","paymentId","paymentID","response","status","catch","UserContext","UserProvider","isAuthenticated","user","setToken","getTokenData","userData","atob","split","timestamp","Date","getTime","exp","userState","UserConsumer","Login","email","password","handleChange","target","startsWith","htmlFor","placeholder","onChange","autoComplete","ProtectedRoute","component","rest","render","Dashboard","orders","logout","mode","ok","Error","getMyOrders","order","orderIndex","created_at","payment_status","payment_id","lines","line","product_title","product_size","product_count","product_price","Register","password_confirm","success","App","exact","path","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","ReactDOM","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ac647a9c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport const CartContext = React.createContext();\r\nCartContext.displayName = \"Cart\";\r\n\r\nexport class CartProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cartItems: [],\r\n      itemsCount: 0\r\n    };\r\n    this.addToCart = this.addToCart.bind(this);\r\n    this.removeFromCart = this.removeFromCart.bind(this);\r\n    this.deleteFromCart = this.deleteFromCart.bind(this);\r\n    this.registerItems = this.registerItems.bind(this);\r\n    this.deleteAllOnSuccessfullPurchase = this.deleteAllOnSuccessfullPurchase.bind(\r\n      this\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (JSON.parse(localStorage.getItem(\"cartItems\")) !== null) {\r\n      let cartItems = JSON.parse(localStorage.getItem(\"cartItems\"));\r\n      let itemsCount = cartItems.reduce((acc, item) => {\r\n        return (acc += item.count);\r\n      }, 0);\r\n      this.setState({ cartItems, itemsCount });\r\n    }\r\n  }\r\n  getItemsCount() {\r\n    let cartItems = this.state.cartItems;\r\n    let itemsCount = cartItems.reduce((acc, item) => {\r\n      return (acc += item.count);\r\n    }, 0);\r\n    console.log(itemsCount);\r\n    this.setState({ itemsCount });\r\n  }\r\n  getValidatedCart(validatedCartName) {\r\n    const validatedCartData = JSON.parse(\r\n      localStorage.getItem(validatedCartName)\r\n    );\r\n\r\n    return validatedCartData;\r\n  }\r\n  setValidatedCart(validatedCartName, validatedCartData) {\r\n    localStorage.setItem(validatedCartName, JSON.stringify(validatedCartData));\r\n  }\r\n  registerItems(cartItems) {\r\n    this.setState({ cartItems });\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n  }\r\n\r\n  addToCart(product) {\r\n    let cartItems = this.state.cartItems;\r\n    let alreadyInCart = false;\r\n    cartItems.forEach(item => {\r\n      if (item.id === product.id) {\r\n        alreadyInCart = true;\r\n        item.count++;\r\n        this.getItemsCount();\r\n      }\r\n    });\r\n\r\n    if (!alreadyInCart) {\r\n      cartItems.push({ ...product, count: 1 });\r\n      this.getItemsCount();\r\n    }\r\n\r\n    this.registerItems(cartItems);\r\n  }\r\n  removeFromCart(product, cartIndex) {\r\n    let cartItems = this.state.cartItems;\r\n    cartItems.forEach(item => {\r\n      if (item.id === product.id) {\r\n        item.count--;\r\n        this.getItemsCount();\r\n        if (item.count <= 0) {\r\n          cartItems.splice(cartIndex, 1);\r\n          this.getItemsCount();\r\n        }\r\n      }\r\n    });\r\n    this.registerItems(cartItems);\r\n  }\r\n  deleteFromCart(cartIndex) {\r\n    let cartItems = this.state.cartItems;\r\n\r\n    cartItems.splice(cartIndex, 1);\r\n    this.registerItems(cartItems);\r\n    this.getItemsCount();\r\n  }\r\n  deleteAllOnSuccessfullPurchase() {\r\n    this.setState({ cartItems: [], itemsCount: 0 });\r\n    localStorage.removeItem(\"validatedCart\");\r\n    localStorage.removeItem(\"cartItems\");\r\n  }\r\n  render() {\r\n    const cartState = {\r\n      ...this.state,\r\n      addToCart: this.addToCart,\r\n      removeFromCart: this.removeFromCart,\r\n      deleteFromCart: this.deleteFromCart,\r\n      setValidatedCart: this.setValidatedCart,\r\n      getValidatedCart: this.getValidatedCart,\r\n      deleteAllOnSuccessfullPurchase: this.deleteAllOnSuccessfullPurchase\r\n    };\r\n    return (\r\n      <CartContext.Provider value={cartState}>\r\n        {this.props.children}\r\n      </CartContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const CartConsumer = CartContext.Consumer;\r\n","import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { CartConsumer } from \"../Context/CartContext\";\r\nconst Navbar = props => {\r\n  let token = localStorage.getItem(\"token\");\r\n\r\n  return (\r\n    <div className=\"main-nav \">\r\n      <div className=\"brand\">\r\n        <NavLink to=\"/\">\r\n          {\" \"}\r\n          <strong>React Shop Api</strong>\r\n        </NavLink>\r\n      </div>\r\n      <nav>\r\n        <NavLink\r\n          to=\"/\"\r\n          activeClassName={props.location.pathname === \"/\" ? \"active\" : \"\"}\r\n        >\r\n          Boutique\r\n        </NavLink>\r\n\r\n        <CartConsumer>\r\n          {cartState => (\r\n            <NavLink\r\n              to={token === null ? \"/connexion\" : \"/commande\"}\r\n              activeClassName={\r\n                props.location.pathname === \"/commande\" ? \"active\" : \"\"\r\n              }\r\n            >\r\n              <span>\r\n                &#128717;\r\n                <small>({cartState.itemsCount})</small>\r\n              </span>\r\n            </NavLink>\r\n          )}\r\n        </CartConsumer>\r\n\r\n        <NavLink\r\n          to=\"/mon-compte\"\r\n          activeClassName={\r\n            props.location.pathname === \"/mon-compte\" ? \"active\" : \"\"\r\n          }\r\n        >\r\n          Mon Compte\r\n        </NavLink>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CartContext, CartConsumer } from \"../Context/CartContext\";\r\nexport default class Cart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: [],\r\n      validatedCart: []\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleAddToCart(item) {\r\n    this.context.addToCart(item);\r\n  }\r\n  handleRemoveFromCart(item, cartIndex) {\r\n    this.context.removeFromCart(item, cartIndex);\r\n  }\r\n  handleDeleteFromCart(cartIndex) {\r\n    this.context.deleteFromCart(cartIndex);\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    let formGroups = document.querySelectorAll(\".form-group\");\r\n    let errors = [];\r\n    formGroups.forEach((formGroup, i) => {\r\n      let validatedCart = this.state.validatedCart;\r\n\r\n      if (formGroup.children[2].children[0].value === \"\") {\r\n        errors.push(\r\n          `la taille n'a pas été confirmée pour: ${formGroup.children[1].children[0].value}`\r\n        );\r\n        this.setState({ errors });\r\n        return errors;\r\n      }\r\n\r\n      if (\r\n        validatedCart.find(\r\n          registeredItem =>\r\n            registeredItem.itemId === formGroup.children[0].children[0].value &&\r\n            registeredItem.itemCount !== formGroup.children[3].children[1].value\r\n        )\r\n      ) {\r\n        validatedCart[i].itemCount = formGroup.children[3].children[1].value;\r\n        return;\r\n      }\r\n      if (\r\n        validatedCart.find(\r\n          registeredItem =>\r\n            registeredItem.itemId === formGroup.children[0].children[0].value\r\n        )\r\n      ) {\r\n        errors[\"duplicate\"] = [\"duplicate\"];\r\n        return;\r\n      } else {\r\n        let currentItem = {};\r\n        currentItem = {\r\n          [formGroup.children[0].children[0].name]:\r\n            formGroup.children[0].children[0].value,\r\n          [formGroup.children[1].children[0].name]:\r\n            formGroup.children[1].children[0].value,\r\n          [formGroup.children[2].children[0].name]:\r\n            formGroup.children[2].children[0].value,\r\n          [formGroup.children[3].children[1].name]:\r\n            formGroup.children[3].children[1].value,\r\n          [formGroup.children[5].children[0].name]:\r\n            formGroup.children[5].children[0].value\r\n        };\r\n\r\n        validatedCart.push(currentItem);\r\n        this.setState({ validatedCart, errors: [] });\r\n      }\r\n      if (formGroups.length === validatedCart.length) {\r\n        this.context.setValidatedCart(\r\n          \"validatedCart\",\r\n          this.state.validatedCart\r\n        );\r\n        this.props.history.push(\"/paiement\");\r\n      }\r\n    });\r\n\r\n    //\r\n  }\r\n  render() {\r\n    let token = localStorage.getItem(\"token\");\r\n    return (\r\n      <CartConsumer>\r\n        {cartState => {\r\n          const { cartItems } = { ...cartState };\r\n          const { errors } = this.state;\r\n          return (\r\n            <main id=\"cart-validation\">\r\n              <header>\r\n                <h1>Valider ma commande</h1>\r\n              </header>\r\n              {cartItems.length < 1 && (\r\n                <section>\r\n                  <p>Aucun article dans votre panier</p>\r\n                </section>\r\n              )}\r\n              {cartItems.length > 0 && (\r\n                <section>\r\n                  {errors.length > 0 &&\r\n                    errors.map((error, errorIndex) => {\r\n                      return (\r\n                        <p key={errorIndex} className=\"error-message\">\r\n                          {error}\r\n                        </p>\r\n                      );\r\n                    })}\r\n                  <form onSubmit={this.handleSubmit}>\r\n                    {cartItems.map((item, cartIndex) => {\r\n                      let sizesArr = [];\r\n                      for (let key in item.availableSizes) {\r\n                        sizesArr.push(item.availableSizes[key].size);\r\n                      }\r\n\r\n                      return (\r\n                        <div className=\"form-group\" key={item.id}>\r\n                          <p>\r\n                            <input\r\n                              type=\"hidden\"\r\n                              name=\"itemId\"\r\n                              value={item.id}\r\n                            />\r\n                          </p>\r\n                          <p>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"itemTitle\"\r\n                              value={item.title}\r\n                              disabled\r\n                            />\r\n                          </p>\r\n                          <p>\r\n                            <select name=\"selectedSize\">\r\n                              <option value=\"\">taille</option>\r\n                              {sizesArr.map((size, index) => (\r\n                                <option key={index} value={size}>\r\n                                  {size}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          </p>\r\n                          <p className=\"count\">\r\n                            <span\r\n                              onClick={this.handleRemoveFromCart.bind(\r\n                                this,\r\n                                item,\r\n                                cartIndex\r\n                              )}\r\n                            >\r\n                              &#8861;\r\n                            </span>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"itemCount\"\r\n                              value={item.count}\r\n                              disabled\r\n                            />\r\n                            <span\r\n                              onClick={this.handleAddToCart.bind(this, item)}\r\n                            >\r\n                              &oplus;\r\n                            </span>\r\n                          </p>\r\n                          <p>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"itemPrice\"\r\n                              value={new Intl.NumberFormat(\"de-DE\", {\r\n                                style: \"currency\",\r\n                                currency: \"EUR\"\r\n                              }).format((item.count * item.price).toFixed(2))}\r\n                              disabled\r\n                            />\r\n                          </p>\r\n                          <p>\r\n                            <input\r\n                              type=\"hidden\"\r\n                              name=\"itemPrice\"\r\n                              value={item.price}\r\n                              disabled\r\n                            />\r\n                          </p>\r\n                          <p>\r\n                            <span\r\n                              className=\"trash\"\r\n                              onClick={this.handleDeleteFromCart.bind(\r\n                                this,\r\n                                cartIndex\r\n                              )}\r\n                            >\r\n                              &#128465;\r\n                            </span>\r\n                          </p>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                    {token === null ? (\r\n                      <Link to=\"connexion\" className=\"submit-connect\">\r\n                        Se Connecter\r\n                      </Link>\r\n                    ) : (\r\n                      <input type=\"submit\" value=\"Valider le Panier\" />\r\n                    )}\r\n                  </form>\r\n                </section>\r\n              )}\r\n            </main>\r\n          );\r\n        }}\r\n      </CartConsumer>\r\n    );\r\n  }\r\n}\r\nCart.contextType = CartContext;\r\n","import React, { Component } from \"react\";\r\n\r\nexport const ProductContext = React.createContext();\r\nProductContext.displayName = \"Product\";\r\n\r\nexport class ProductProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      products: []\r\n    };\r\n    this.getProductList = this.getProductList.bind(this);\r\n    this.getSingleProduct = this.getSingleProduct.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getProductList();\r\n  }\r\n  getProductList() {\r\n    fetch(`https://shop-api.frameworks.software/api/v1/products`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ products: data }));\r\n  }\r\n\r\n  getSingleProduct(id) {\r\n    return fetch(`https://shop-api.frameworks.software/api/v1/products/${id}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        return data;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const productState = {\r\n      ...this.state,\r\n      getSingleProduct: this.getSingleProduct\r\n    };\r\n\r\n    return (\r\n      <ProductContext.Provider value={productState}>\r\n        {this.props.children}\r\n      </ProductContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const ProductConsumer = ProductContext.Consumer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProductList = props => {\r\n  const { products, addToCart } = props;\r\n  const handleAddToCart = product => {\r\n    addToCart(product);\r\n  };\r\n  return (\r\n    <>\r\n      {products.map(product => (\r\n        <article key={product.id} className=\"product-card\">\r\n          <h3 className=\"product-card__header\">{product.title} </h3>\r\n          <div className=\"product-card__body\">\r\n            <Link to={`/details/${product.id}`}>\r\n              <img src={product.images[0].url} alt=\"\" />\r\n            </Link>\r\n\r\n            <div className=\"sizes\">\r\n              <p>Tailles disponibles:</p>\r\n              {product.availableSizes.map(size => (\r\n                <span key={size.id}>{size.size.toLowerCase()} </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"product-card__footer\">\r\n            <p>\r\n              {new Intl.NumberFormat(\"de-DE\", {\r\n                style: \"currency\",\r\n                currency: \"EUR\"\r\n              }).format(product.price)}\r\n            </p>\r\n            <span\r\n              role=\"img\"\r\n              aria-label=\"caddie\"\r\n              onClick={handleAddToCart.bind(this, product)}\r\n            >\r\n              &#128722;\r\n            </span>\r\n          </div>\r\n        </article>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React, { Component } from \"react\";\r\nimport { ProductConsumer } from \"../Context/ProductContext\";\r\nimport ProductList from \"./products/ProductList\";\r\nimport { CartConsumer } from \"../Context/CartContext\";\r\n\r\nexport default class Shop extends Component {\r\n  render() {\r\n    return (\r\n      <CartConsumer>\r\n        {cartState => (\r\n          <ProductConsumer>\r\n            {productState => (\r\n              <main>\r\n                <header>\r\n                  <h1>Boutique</h1>\r\n                </header>\r\n                <section id=\"shop\">\r\n                  <ProductList\r\n                    products={productState.products}\r\n                    addToCart={cartState.addToCart}\r\n                  />\r\n                </section>\r\n              </main>\r\n            )}\r\n          </ProductConsumer>\r\n        )}\r\n      </CartConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ProductContext } from \"../../Context/ProductContext\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class ProductDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      product: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    fetch(`https://shop-api.frameworks.software/api/v1/products/${id}`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ product: data }));\r\n  }\r\n \r\n  render() {\r\n    const { product } = this.state;\r\n    let imageUrl;\r\n    let imageAlt;\r\n    for (let key in product.images) {\r\n      imageUrl = product.images[0].url;\r\n      imageAlt = product.images[0].name;\r\n    }\r\n    const sizes = [];\r\n    for (let key in product.availableSizes) {\r\n      sizes.push(product.availableSizes[key].size + \"\");\r\n    }\r\n\r\n    return (\r\n      <main id=\"single-product\">\r\n        <header>\r\n          <Link to=\"/\"> &lt;&lt; Retour</Link>\r\n          <h1>Détails {product.title} </h1>\r\n        </header>\r\n        <section>\r\n          <div className=\"single-product__body\">\r\n            <img src={imageUrl} alt={imageAlt} />\r\n            <p>{product.description} </p>\r\n            <p>Tailles disponibles</p>\r\n            <p>\r\n              {\" \"}\r\n              {sizes.map((size, index) => (\r\n                <span key={index}>{size} </span>\r\n              ))}\r\n            </p>\r\n          </div>\r\n          <div className=\"single-product__footer\">\r\n            <p>\r\n              {new Intl.NumberFormat(\"de-DE\", {\r\n                style: \"currency\",\r\n                currency: \"EUR\"\r\n              }).format(product.price)}\r\n            </p>\r\n            <span role=\"img\" aria-label=\"caddie\">\r\n              &#128722;\r\n            </span>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\nProductDetails.contextType = ProductContext;\r\n","import React, { Component } from \"react\";\r\nimport { CartContext } from \"../Context/CartContext\";\r\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\r\nexport class Checkout extends Component {\r\n  render() {\r\n    console.log(\"new\");\r\n    const validatedCart = this.context.getValidatedCart(\"validatedCart\");\r\n\r\n    const client = {\r\n      sandbox:\r\n        \"ARfF7X6QHlMiDMt-dQSu4Xi0cz5u7vQm55mRI3EmZkf5S7XFlds_EkoMu2U0tC77S1TNoPtdZF8q9Ar1\",\r\n      production: \"YOUR-PRODUCTION-APP-ID\"\r\n    };\r\n    let env = \"sandbox\";\r\n    const onSuccess = payment => {\r\n      let token = JSON.parse(localStorage.getItem(\"token\"));\r\n\r\n      fetch(\"https://shop-api.frameworks.software/api/v1/ordres/creer\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          token: token,\r\n          paymentStatus: payment.paid,\r\n          paymentId: payment.paymentID,\r\n          validatedCart: validatedCart\r\n        })\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if (data.status === \"success\") {\r\n            this.context.deleteAllOnSuccessfullPurchase();\r\n\r\n            this.props.history.push(\"/mon-compte\");\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    const onError = err => {\r\n      // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n      console.log(\"Error!\", err);\r\n      // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n      // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n    };\r\n    const montant = validatedCart.reduce(\r\n      (sum, item) => (sum += item.itemPrice * item.itemCount),\r\n      0\r\n    );\r\n\r\n    return (\r\n      <main id=\"checkout\">\r\n        <header>\r\n          <h1>Régler ma commande</h1>\r\n        </header>\r\n        <section>\r\n          <ul className=\"item-line__header\">\r\n            <li>Désignation</li>\r\n            <li>Taille</li>\r\n            <li>Qté x PU</li>\r\n            <li>Total</li>\r\n          </ul>\r\n          {validatedCart.map((item, index) => (\r\n            <ul className=\"item-line\" key={index}>\r\n              <li>{item.itemTitle}</li>\r\n              <li>{item.selectedSize}</li>\r\n              <li>\r\n                {item.itemCount}x {item.itemPrice}\r\n              </li>\r\n              <li>{item.itemCount * item.itemPrice}</li>\r\n            </ul>\r\n          ))}\r\n          <h3>\r\n            Montant à régler:{\" \"}\r\n            {montant.toLocaleString(\"fr-FR\", {\r\n              style: \"currency\",\r\n              currency: \"EUR\"\r\n            })}\r\n          </h3>\r\n          <PaypalExpressBtn\r\n            client={client}\r\n            env={env}\r\n            currency=\"EUR\"\r\n            total={montant.toFixed(2)}\r\n            onError={onError}\r\n            onSuccess={onSuccess}\r\n          />\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkout;\r\nCheckout.contextType = CartContext;\r\n","import React, { Component } from \"react\";\r\n\r\nexport const UserContext = React.createContext();\r\nUserContext.displayName = \"User\";\r\n\r\nexport class UserProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAuthenticated: null,\r\n      user: {}\r\n    };\r\n    this.setToken = this.setToken.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getTokenData();\r\n  }\r\n  getTokenData() {\r\n    if (localStorage.getItem(\"token\") !== null) {\r\n      let token = JSON.parse(localStorage.getItem(\"token\"));\r\n      const userData = JSON.parse(atob(token.split(\".\")[1]));\r\n      const timestamp = new Date().getTime() / 1000;\r\n\r\n      if (userData.exp - timestamp > 0) {\r\n        this.setState({ isAuthenticated: true, user: userData.user });\r\n      } else {\r\n        this.setState({ isAuthenticated: false, user: {} });\r\n        localStorage.removeItem(\"token\");\r\n      }\r\n    }\r\n  }\r\n  setToken(token) {\r\n    localStorage.setItem(\"token\", JSON.stringify(token));\r\n    this.getTokenData();\r\n  }\r\n  render() {\r\n    const userState = {\r\n      ...this.state,\r\n      setToken: this.setToken\r\n    };\r\n\r\n    return (\r\n      <UserContext.Provider value={userState}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const UserConsumer = UserContext.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../Context/UserContext\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: []\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n\r\n    const response = await fetch(\r\n      \"https://shop-api.frameworks.software/api/v1/acces/connecter\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(user)\r\n      }\r\n    ).catch(errors => console.log(errors));\r\n\r\n    const data = await response.json();\r\n    if (data.errors) {\r\n      const errors = data.errors;\r\n      this.setState({ errors });\r\n    }\r\n    if (data.token) {\r\n      const token = data.token;\r\n      if (token.startsWith(\"Bearer \")) {\r\n        this.context.setToken(token);\r\n        this.props.history.push(\"/mon-compte\");\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <main id=\"connexion\">\r\n        <header>\r\n          <h1>Connexion</h1>\r\n        </header>\r\n        <section>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">\r\n                Email{\" \"}\r\n                {errors.email && (\r\n                  <span className=\"error\"> &#9888; {errors.email}</span>\r\n                )}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Entrer votre email\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">\r\n                Mot de passe{\" \"}\r\n                {errors.password && (\r\n                  <span className=\"error\"> &#9888; {errors.password}</span>\r\n                )}\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Entrer votre mot de passe\"\r\n                onChange={this.handleChange}\r\n                autoComplete=\"false\"\r\n              />\r\n            </div>\r\n            <input type=\"submit\" value=\"Se Connecter\" />{\" \"}\r\n          </form>\r\n          <p>\r\n            Pas enregistrer ? <Link to=\"/inscription\">Je créer mon Compte</Link>\r\n          </p>\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\nLogin.contextType = UserContext;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default class ProtectedRoute extends Component {\r\n  render() {\r\n    const { component: Component, ...rest } = this.props;\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          token ? (\r\n            <Component {...props} user={this.context.user} />\r\n          ) : (\r\n            <Redirect to=\"/connexion\" />\r\n          )\r\n        }\r\n      ></Route>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { UserContext } from \"../Context/UserContext\";\r\nexport default class Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAuthenticated: null,\r\n      user: {},\r\n      orders: []\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  getMyOrders() {\r\n    const { email } = this.context.user;\r\n    fetch(\"https://shop-api.frameworks.software/api/v1/ordres/mes-ordres\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      body: JSON.stringify({ email: email })\r\n    })\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          throw new Error(res.status);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        this.setState(() => ({\r\n          orders: data\r\n        }));\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  logout() {\r\n    localStorage.removeItem(\"token\");\r\n    this.props.history.push(\"/\");\r\n  }\r\n  render() {\r\n    this.getMyOrders();\r\n    const { orders } = this.state;\r\n    return (\r\n      <main id=\"orders-summary\">\r\n        <header>\r\n          <h1>Mes Ordres</h1>\r\n          <p onClick={this.logout}>Déconnexion</p>\r\n        </header>\r\n\r\n        <section>\r\n          {orders.length > 0 &&\r\n            orders.map((order, orderIndex) => (\r\n              <article key={orderIndex}>\r\n                <p>\r\n                  Achat du:\r\n                  <span>{order.created_at} </span>\r\n                </p>\r\n                <p>\r\n                  Status:{\" \"}\r\n                  <small> {order.payment_status ? \"Payé\" : \"Inconnu\"} </small>\r\n                </p>\r\n                <p>\r\n                  ID:\r\n                  <small>{order.payment_id} </small>\r\n                </p>\r\n                <details>\r\n                  <summary>Voir le détail</summary>\r\n                  <p key=\"-1\">\r\n                    <span>Produit</span>\r\n                    <span>Taille</span>\r\n                    <span>Qté</span>\r\n                    <span>Prix</span>\r\n                  </p>\r\n                  <hr />\r\n                  {order.lines.map((line, index) => (\r\n                    <p key={index}>\r\n                      <span>{line.product_title}</span>\r\n                      <span>{line.product_size} </span>\r\n                      <span>{line.product_count} </span>\r\n                      <span>{line.product_price} </span>\r\n                    </p>\r\n                  ))}\r\n                </details>\r\n              </article>\r\n            ))}\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\nDashboard.contextType = UserContext;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password_confirm: \"\",\r\n      errors: []\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    const user = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password_confirm: this.state.password_confirm\r\n    };\r\n\r\n    const response = await fetch(\r\n      \"https://shop-api.frameworks.software/api/v1/acces/enregistrer\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(user)\r\n      }\r\n    ).catch(errors => console.log(errors));\r\n\r\n    const data = await response.json();\r\n    if (data.errors) {\r\n      const errors = data.errors;\r\n      this.setState({ errors });\r\n    }\r\n    if (data.success) {\r\n      this.props.history.push(\"/connexion\");\r\n    }\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <main id=\"inscription\">\r\n        <header>\r\n          <h1>Inscription</h1>\r\n        </header>\r\n        <section>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">\r\n                Nom{\" \"}\r\n                {errors.name && (\r\n                  <span className=\"error\"> &#9888; {errors.name}</span>\r\n                )}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"Entrer votre email\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">\r\n                Email{\" \"}\r\n                {errors.email && (\r\n                  <span className=\"error\"> &#9888; {errors.email}</span>\r\n                )}\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Entrer votre email\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">\r\n                Mot de passe{\" \"}\r\n                {errors.password && (\r\n                  <span className=\"error\"> &#9888; {errors.password}</span>\r\n                )}\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Entrer votre mot de passe\"\r\n                onChange={this.handleChange}\r\n                autoComplete=\"false\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password_confirm\">\r\n                Confirmer le mot de passe\r\n                {errors.password_confirm && (\r\n                  <span className=\"error\"> &#9888; {errors.password}</span>\r\n                )}\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password_confirm\"\r\n                id=\"password_confirm\"\r\n                placeholder=\"Entrer votre mot de passe\"\r\n                onChange={this.handleChange}\r\n                autoComplete=\"false\"\r\n              />\r\n            </div>\r\n            <input type=\"submit\" value=\"S'inscrire\" />{\" \"}\r\n          </form>\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./Components/Navbar\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Cart from \"./Components/Cart\";\nimport Shop from \"./Components/Shop\";\nimport ProductDetails from \"./Components/products/ProductDetails\";\nimport Checkout from \"./Components/Checkout\";\nimport Login from \"./Components/Login\";\nimport ProtectedRoute from \"./Components/Utils/ProtectedRoute\";\nimport Dashboard from \"./Components/Dashboard\";\nimport Register from \"./Components/Register\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Shop} />\n          <Route exact path=\"/commande\" component={Cart} />\n          <Route exact path=\"/details/:id\" component={ProductDetails} />\n          {/* <Route\n            exact\n            path=\"/paiement\"\n            render={props => <Checkout {...props} user={userState.user} />}\n          /> */}\n          <Route path=\"/connexion\" component={Login} />\n          <Route path=\"/inscription\" component={Register} />\n          <ProtectedRoute path=\"/mon-compte\" component={Dashboard} />\n          <ProtectedRoute path=\"/paiement\" component={Checkout} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ProductProvider } from \"./Context/ProductContext\";\nimport { CartProvider } from \"./Context/CartContext\";\nimport { UserProvider, UserConsumer } from \"./Context/UserContext\";\n\nReactDOM.render(\n  <UserProvider>\n    <UserConsumer>\n      {userState => (\n        <CartProvider>\n          <ProductProvider>\n            <App userState={userState} />\n          </ProductProvider>\n        </CartProvider>\n      )}\n    </UserConsumer>\n  </UserProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}